language: java
jdk: 
  - oraclejdk7

env:
  global:
    - secure: "uj32149LhL/Ns/Oy4311/J98a9N+JyhLIzU1RM8PQQiS5vIMx9CrnQU5xbYjOIm/jMjTpfuUicgk5Lq8q0oh6Fs7d2nSoZLUngjt5wS4OovtQpZfIdB46iIKakcO8xN2WUcYz2IOpYizyKooaOK30DgtOmxDMH6b6F2KfZTflLs="
  matrix:
  # - ANDROID_TARGET=android-8   ANDROID_SDKS=android-8,build-tools-17.0.0            ANDROID_BUILD_TOOLS_VERSION=17.0.0 ANDROID_ABI=armeabi
  # - ANDROID_TARGET=android-10  ANDROID_SDKS=android-10,build-tools-17.0.0,sysimg-10 ANDROID_BUILD_TOOLS_VERSION=17.0.0 ANDROID_ABI=armeabi
  # - ANDROID_TARGET=android-15  ANDROID_SDKS=android-15,build-tools-17.0.0,sysimg-15 ANDROID_BUILD_TOOLS_VERSION=17.0.0 ANDROID_ABI=armeabi-v7a
  - ANDROID_TARGET=android-17  ANDROID_SDKS=android-17,build-tools-17.0.0,sysimg-17 ANDROID_BUILD_TOOLS_VERSION=17.0.0 ANDROID_ABI=armeabi-v7a
before_install:
  # Install base Android SDK
  - sudo apt-get update -qq
  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch; fi
  - wget http://dl.google.com/android/android-sdk_r22-linux.tgz
  - tar xzf android-sdk_r22-linux.tgz
  - export ANDROID_HOME=`pwd`/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools/$ANDROID_BUILD_TOOLS_VERSION

  # Install required Android components.
  - android list sdk --extended
  # Do you accept the license 'android-sdk-license-bcbbd656' [y/n]:
  - echo -e "y\n" > accept.txt
  - android update sdk --filter platform-tools,extra-android-support,extra-android-m2repository,$ANDROID_SDKS --no-ui --force < accept.txt
  # - android update sdk --filter extra-android-support --no-ui --force > /dev/null
  # - android update sdk --filter extra-android-m2repository --no-ui --force > /dev/null

  # PROVISIONAL: changed SDKr22 build-tools path. create symbolic link
  - if [ ! -e ${ANDROID_HOME}/platform-tools/aapt ]; then ln -s ${ANDROID_HOME}/build-tools/$ANDROID_BUILD_TOOLS_VERSION/aapt ${ANDROID_HOME}/platform-tools/aapt; fi
  - if [ ! -e ${ANDROID_HOME}/platform-tools/aidl ]; then ln -s ${ANDROID_HOME}/build-tools/$ANDROID_BUILD_TOOLS_VERSION/aidl ${ANDROID_HOME}/platform-tools/aidl; fi

  # gradle set up
  - ./gradlew -PmyToken=$DEPLOY_GATE_API_KEY -q assemble

script:
  - ./gradlew check > build.out
  - ./gradlew -PmyToken=$DEPLOY_GATE_API_KEY build

after_failure: 
  - cat build.out

after_success:
  - ./gradlew -PmyToken=$DEPLOY_GATE_API_KEY uploadDeployGate
